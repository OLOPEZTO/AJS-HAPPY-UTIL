<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ajs</groupId>
	<artifactId>utils</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>utils</name>
	<description>Microservicios utilerias</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
 		    <!-- GCP (1)
 		    	 https://github.com/GoogleCloudPlatform/getting-started-java/tree/master/appengine-standard-java8/springboot-appengine-standard
 		    	 Google App Engine Standard deploys your WAR into a Jetty server.
 		    	 Spring Boot's starter includes Tomcat by default -->
 		    <exclusions>
			    <exclusion>
			      <groupId>org.springframework.boot</groupId>
			      <artifactId>spring-boot-starter-tomcat</artifactId>
			    </exclusion>
			</exclusions>
		</dependency>
		<!-- Hypertext as the Engine of Application State > REST -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- GCP (2) 
			 Do not include the Jetty dependencies. But you must include Servlet API dependency -->
		<dependency>
		  	<groupId>javax.servlet</groupId>
		  	<artifactId>javax.servlet-api</artifactId>
		  	<scope>provided</scope>
		</dependency>

		<!-- GCP(3) 
			Spring Boot's default logging bridge conflicts with Jetty's logging system
			The easiest way to do this is to set the dependency scope to provided, so that it won't be included in the WAR
			Exclude any jul-to-slf4j -->
		<dependency>
		  	<groupId>org.slf4j</groupId>
		  	<artifactId>jul-to-slf4j</artifactId>
		  	<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		 <!-- Soporte JPA -->
		<!-- dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
	    </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
        </dependency-->
        <!-- Soporte MySQL -->
	    <!-- dependency>
		    <groupId>mysql</groupId>
		    <artifactId>mysql-connector-java</artifactId>
	    </dependency -->
        <!-- Soporte XML para REST -->
        <dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
	    </dependency>
        <!-- Soporte SWAGGER -->
        <dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.9.2</version>
	    </dependency>
        <dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.9.2</version>
	    </dependency>
		<!-- JSTL -->
		<!-- dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency -->
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
		    <groupId>org.projectlombok</groupId>
		    <artifactId>lombok</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- EMAIL -->
		<dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>javax.mail-api</artifactId>
		</dependency>
		<!-- Google cloud storage -->
		<dependency>
		    <groupId>com.google.cloud</groupId>
		    <artifactId>google-cloud-storage</artifactId>
		    <version>1.62.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.h2database/h2 -->
		<!-- dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2</artifactId>
		    <version>1.4.198</version>
		    <scope>test</scope>
		</dependency -->
		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt</artifactId>
		    <version>0.9.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- GCP (4)
				 App Engine Standard Plugin
				 ( Add a src/main/webapp/WEB-INF/appengine-web.xml ) --> 
			<plugin>
			  <groupId>com.google.cloud.tools</groupId>
			  <artifactId>appengine-maven-plugin</artifactId>
			  <version>1.3.1</version>
			  <configuration>
          		<version>1</version>
        	  </configuration>
			</plugin>

		</plugins>
	</build>

</project>